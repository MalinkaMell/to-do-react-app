{"version":3,"sources":["components/TodoButton.js","components/TodoItem.js","components/TodoList.js","components/TodoAdd.js","components/Title.js","components/SelectTodos.js","App.js","index.js"],"names":["TodoButton","props","Fragment","type","className","class","value","onClick","e","args","clickHandler","TodoItem","key","todo","id","onChange","switchCheckbox","checked","completed","disabled","title","deleteHandler","TodoList","todos","map","TodoAdd","name","newtodo","inputHandler","ref","todoInput","placeholder","submitHandler","Title","SelectTodos","Form","Control","as","custom","filter","selectHandler","App","useState","setTodo","list","setList","setFilter","deleted","setDeleted","useRef","Container","Row","Col","md","target","item","indexOf","preventDefault","newTodo","length","prevState","current","focus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.532722fd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TodoButton = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n            type={props.type}\r\n            className={props.class}\r\n            value={props.value}\r\n            onClick={e => props.args ? props.clickHandler(...props.args, e) : props.clickHandler(e)}\r\n          />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoButton;","import React from \"react\";\r\nimport TodoButton from \"./TodoButton\";\r\n\r\nconst TodoItem = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"input-group mb-3 mx-2\" key={props.todo.id}>\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={e => props.switchCheckbox(props.todo.id, e)}\r\n              value={props.todo.id}\r\n              checked={props.todo.completed}\r\n            />\r\n          </div>\r\n        </div>\r\n        <input type=\"text\"\r\n          className={\"form-control \" + (props.todo.completed ? \"completed \" : \"uncompleted\")}\r\n          disabled value={props.todo.title} />\r\n        <div className=\"input-group-append\" >\r\n          <TodoButton\r\n            todo={props.todo}\r\n            clickHandler={props.deleteHandler}\r\n            type=\"button\"\r\n            value=\"✗\"\r\n            class=\"btn btn-delete\"\r\n            args={[props.todo.id]}\r\n             />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.todos.map(todo =>\r\n        <TodoItem\r\n          key={todo.id + todo.title}\r\n          todo={todo}\r\n          switchCheckbox={props.switchCheckbox}\r\n          deleteHandler={props.deleteHandler}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoButton from \"./TodoButton\";\r\n\r\nconst TodoAdd = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"w-100 mx-2 mt-3\">\r\n        <div className=\"input-group mb-3\">\r\n          <input className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"newtodo\"\r\n            value={props.newtodo}\r\n            onChange={props.inputHandler}\r\n            ref={props.todoInput}\r\n            placeholder=\"Add new to-do\"\r\n          />\r\n          <div className=\"input-group-append\" >\r\n            <TodoButton\r\n              newtodo={props.newtodo}\r\n              clickHandler={props.submitHandler}\r\n              type=\"submit\"\r\n              value=\"✓\"\r\n              class=\"btn btn-add\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoAdd;","import React from \"react\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <h1 className=\"mt-2 title\">React To-do App</h1>\r\n  );\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst SelectTodos = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form.Control as=\"select\" custom=\"true\" value={props.filter} onChange={props.selectHandler} className=\"my-3 mx-2\">\r\n        <option value=\"all\">Show all</option>\r\n        <option value=\"completed\">Show completed</option>\r\n        <option value=\"uncompleted\">Show uncompleted</option>\r\n      </Form.Control>\r\n      <hr className=\"w-100 my-3 mx-2\" />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SelectTodos;","import React, { useState, useRef } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport todos from \"./todos.json\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoAdd from \"./components/TodoAdd\";\r\nimport Title from \"./components/Title\";\r\nimport SelectTodos from \"./components/SelectTodos\";\r\n\r\nconst App = () => {\r\n\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [list, setList] = useState(todos);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [deleted, setDeleted] = useState([]);\r\n  const todoInput = useRef(null);\r\n\r\n  const switchCheckbox = (id, e) => {\r\n    setList(\r\n      list.map(item => {\r\n        if (id === item.id) {\r\n          item.completed = !item.completed;\r\n        }\r\n        return item;\r\n      })\r\n    )\r\n  }\r\n\r\n  const deleteHandler = (id, e) => {\r\n    e.preventDefault();\r\n    setDeleted([...deleted, id]);\r\n    setList(list.filter(item => item.id !== id))\r\n  }\r\n\r\n  const inputHandler = e => {\r\n    setTodo(e.target.value)\r\n  }\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const newItemId = list.length + 1;\r\n    const newTodo = {\r\n      id: newItemId,\r\n      title: todo,\r\n      completed: false\r\n    };\r\n\r\n    if (todo !== \"\") {\r\n      setList(prevState => {\r\n        return [...prevState, newTodo]\r\n      })\r\n      setTodo(\"\")\r\n    }\r\n    todoInput.current.focus();\r\n  }\r\n\r\n  const selectHandler = e => {\r\n    const { value } = e.target;\r\n    switch (value) {\r\n      case \"completed\":\r\n        setFilter(\"completed\");\r\n        return setList(todos.filter(item => deleted.indexOf(item.id) === -1 && item.completed));\r\n      case \"uncompleted\":\r\n        setFilter(\"uncompleted\")\r\n        return setList(todos.filter(item => deleted.indexOf(item.id) === -1 && !item.completed));\r\n      default:\r\n        setFilter(\"all\")\r\n        return setList(todos.filter(item => deleted.indexOf(item.id) === -1 && item));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center my-2\">\r\n        <Title />\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6} className=\"jumbotron mx-2\">\r\n          <Row>\r\n            <SelectTodos filter={filter} selectHandler={selectHandler} />\r\n          </Row>\r\n          <Row>\r\n            <TodoAdd\r\n              newtodo={todo}\r\n              inputHandler={inputHandler}\r\n              submitHandler={submitHandler}\r\n              todoInput={todoInput} />\r\n\r\n          </Row>\r\n          <Row>\r\n            <TodoList\r\n              todos={list}\r\n              switchCheckbox={switchCheckbox}\r\n              deleteHandler={deleteHandler}\r\n            />\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container >\r\n  );\r\n}\r\n\r\n/* class App extends React.Component {\r\n  state = {\r\n    newtodo: \"\",\r\n    todos\r\n  }\r\n\r\n  todoInput = React.createRef();\r\n\r\n  switchCheckbox = (id, e) => {\r\n    this.setState({\r\n      todos: this.state.todos.map(item => {\r\n        if (id === item.id) {\r\n          item.completed = !item.completed;\r\n        }\r\n        return item;\r\n      })\r\n    });\r\n  }\r\n\r\n  deleteHandler = (id, e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      todos: this.state.todos.filter(item => item.id !== id)\r\n    });\r\n  }\r\n\r\n  inputHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    const newItemId = this.state.todos.length;\r\n    const newTodo = {\r\n      id: newItemId + 1,\r\n      title: this.state.newtodo,\r\n      completed: false\r\n    };\r\n\r\n    if (this.state.newtodo !== \"\") {\r\n      this.setState({\r\n        todos: [...this.state.todos, newTodo], newtodo: \"\"\r\n      });\r\n    }\r\n    this.todoInput.current.focus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"justify-content-center my-2\">\r\n          <h1>React To-do App</h1>\r\n\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={6} className=\"jumbotron\">\r\n            <Row>\r\n              <TodoAdd\r\n                newtodo={this.state.newtodo}\r\n                inputHandler={this.inputHandler}\r\n                submitHandler={this.submitHandler}\r\n                todoInput={this.todoInput} />\r\n\r\n            </Row>\r\n            <Row>\r\n              <TodoList\r\n                todos={this.state.todos}\r\n                switchCheckbox={this.switchCheckbox}\r\n                deleteHandler={this.deleteHandler}\r\n              />\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container >\r\n    );\r\n  }\r\n\r\n} */\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}