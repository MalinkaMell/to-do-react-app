{"version":3,"sources":["components/TodoButton.js","components/TodoItem.js","components/TodoList.js","components/TodoAdd.js","components/Title.js","App.js","index.js"],"names":["TodoButton","props","Fragment","type","className","class","value","onClick","e","clickHandler","todo","id","TodoItem","key","onChange","switchCheckbox","checked","completed","disabled","title","deleteHandler","TodoList","todos","map","TodoAdd","name","newtodo","inputHandler","ref","todoInput","placeholder","submitHandler","Title","App","useState","setTodo","list","setList","useRef","Container","Row","Col","md","target","preventDefault","newTodo","length","prevState","current","focus","item","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbb50572.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TodoButton = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n            type={props.type}\r\n            className={props.class}\r\n            value={props.value}\r\n            onClick={e => props.value === \"✗\" ? props.clickHandler(props.todo.id, e) : props.clickHandler(e)}\r\n          />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoButton;","import React from \"react\";\r\nimport TodoButton from \"./TodoButton\";\r\n\r\nconst TodoItem = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"input-group mb-3\" key={props.todo.id}>\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text\">\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={e => props.switchCheckbox(props.todo.id, e)}\r\n              value={props.todo.id}\r\n              checked={props.todo.completed}\r\n            />\r\n          </div>\r\n        </div>\r\n        <input type=\"text\"\r\n          className={\"form-control bg-light \" + (props.todo.completed ? \"completed \" : \"uncompleted\")}\r\n          disabled value={props.todo.title} />\r\n        <div className=\"input-group-append\" >\r\n          <TodoButton todo={props.todo} clickHandler={props.deleteHandler} type=\"button\" value=\"✗\" class=\"btn btn-danger\" />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.todos.map(todo =>\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          switchCheckbox={props.switchCheckbox}\r\n          deleteHandler={props.deleteHandler}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoButton from \"./TodoButton\";\r\n\r\nconst TodoAdd = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"w-100\">\r\n        <div className=\"input-group mb-3\">\r\n          <input className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"newtodo\"\r\n            value={props.newtodo}\r\n            onChange={props.inputHandler}\r\n            ref={props.todoInput}\r\n            placeholder=\"Add new to-do\"\r\n          />\r\n          <div className=\"input-group-append\" >\r\n            <TodoButton\r\n              newtodo={props.newtodo}\r\n              clickHandler={props.submitHandler}\r\n              type=\"submit\"\r\n              value=\"✓\"\r\n              class=\"btn btn-warning\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoAdd;","import React from \"react\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <h1 className=\"mt-2\">React To-do App</h1>\r\n  );\r\n}\r\n\r\nexport default Title;","import React, { useState, useRef } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./App.css\";\nimport todos from \"./todos.json\";\nimport TodoList from \"./components/TodoList\";\nimport TodoAdd from \"./components/TodoAdd\";\nimport Title from \"./components/Title\";\n\nconst App = () => {\n\n  const [todo, setTodo] = useState(\"\");\n  const [list, setList] = useState(todos);\n  const todoInput = useRef(null);\n\n  const switchCheckbox = (id, e) => {\n    setList(\n      list.map(item => {\n        if (id === item.id) {\n          item.completed = !item.completed;\n        }\n        return item;\n      })\n    )\n  }\n\n  const deleteHandler = (id, e) => {\n    e.preventDefault();\n    setList(list.filter(item => item.id !== id))\n  }\n\n  const inputHandler = e => {\n    setTodo(e.target.value)\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newItemId = list.length;\n    const newTodo = {\n      id: newItemId + 1,\n      title: todo,\n      completed: false\n    };\n\n    if (todo !== \"\") {\n      setList(prevState => {\n        return [...prevState, newTodo]\n      })\n      setTodo(\"\")\n    }\n    todoInput.current.focus();\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center my-2\">\n        <Title />\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col md={6} className=\"jumbotron\">\n          <Row>\n            <TodoAdd\n              newtodo={todo}\n              inputHandler={inputHandler}\n              submitHandler={submitHandler}\n              todoInput={todoInput} />\n\n          </Row>\n          <Row>\n            <TodoList\n              todos={list}\n              switchCheckbox={switchCheckbox}\n              deleteHandler={deleteHandler}\n            />\n          </Row>\n        </Col>\n      </Row>\n    </Container >\n  );\n}\n\n/* class App extends React.Component {\n  state = {\n    newtodo: \"\",\n    todos\n  }\n\n  todoInput = React.createRef();\n\n  switchCheckbox = (id, e) => {\n    this.setState({\n      todos: this.state.todos.map(item => {\n        if (id === item.id) {\n          item.completed = !item.completed;\n        }\n        return item;\n      })\n    });\n  }\n\n  deleteHandler = (id, e) => {\n    e.preventDefault();\n    this.setState({\n      todos: this.state.todos.filter(item => item.id !== id)\n    });\n  }\n\n  inputHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(e.target.value);\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    const newItemId = this.state.todos.length;\n    const newTodo = {\n      id: newItemId + 1,\n      title: this.state.newtodo,\n      completed: false\n    };\n\n    if (this.state.newtodo !== \"\") {\n      this.setState({\n        todos: [...this.state.todos, newTodo], newtodo: \"\"\n      });\n    }\n    this.todoInput.current.focus();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"justify-content-center my-2\">\n          <h1>React To-do App</h1>\n\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md={6} className=\"jumbotron\">\n            <Row>\n              <TodoAdd\n                newtodo={this.state.newtodo}\n                inputHandler={this.inputHandler}\n                submitHandler={this.submitHandler}\n                todoInput={this.todoInput} />\n\n            </Row>\n            <Row>\n              <TodoList\n                todos={this.state.todos}\n                switchCheckbox={this.switchCheckbox}\n                deleteHandler={this.deleteHandler}\n              />\n            </Row>\n          </Col>\n        </Row>\n      </Container >\n    );\n  }\n\n} */\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}